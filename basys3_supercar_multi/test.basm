%section kittleft .romtext iomode:sync
        entry _start    ; Entry point
_start:
	rsets16 r3,1 ; initial led position, r3 holds the led pattern as 16 bit register
	rsets16 r4,0 ; direction - 0=left , otherwise=right
wait:
	rsets16 r0, 3000 ; wait time1
	rsets16 r1, 1000 ; wait time2
	call8s sleep ; call sleep from the library
	jz r4, goingl ; check direction and jump accordingly
goingr:
	cir r3 ; shift right
	jz r3, setl ; if r3 is zero, set direction to left
	j print	
setl:
	r2o r3, o0
	mov o1, r4 ; send a message to the board at the right
	mov r4, i0 ; wait for a message from the board at the right
	rsets16 r4,0 ; set direction to left
	rsets16 r3,1 ; set r3 to first led
	j print
goingl:
	cil r3 ; shift left
	jz r3, setr ; if r3 is zero, set direction to right
	j print
setr:
	rsets16 r4, 1 ; set direction to right
	rsets16 r3, 32768 ; set r3 to last led
	j print
print:
	r2o r3, o0
	j wait
%endsection



%section kittright .romtext iomode:sync
        entry _start    ; Entry point
_start:
	mov r4,i0
	rsets16 r3,32768
	rsets16 r4,1 ; direction - 0=left , otherwise=right
wait:
	rsets16 r0, 3000
	rsets16 r1, 1000
	call8s sleep
	jz r4, goingl
goingr:
	cir r3
	jz r3, setl
	j print	
setl:
	rsets16 r4,0
	rsets16 r3,1
	j print
goingl:
	cil r3
	jz r3, setr
	j print
setr:
	r2o r3, o0
	mov o1, r4
	mov r4,i0
	rsets16 r4, 1
	rsets16 r3, 32768
	j print
print:
	r2o r3, o0
	j wait
%endsection
